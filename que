As6: Upload static website in s3

As7: Upload static website in ec2

As8: Deploy a project from local machine to Github and vice
versa.

As9: Deploy a project from Github to EC2

As10: Deploy project from GitHub to EC2 by crea􀆟ng new security group and user data.

As11: Build Scaling plans in AWS that balance load on different EC2 instances

As12: Deploy and run project in AWS without using port.

As13: Create a Workmail for your organisation.

As14: Create an elas􀆟c IP for an instance.

As15: Create a serverless compu􀆟ng service.


#!/bin/bash
apt-get update
apt-get install -y nginx
systemctl start nginx
systemctl enable nginx
apt-get install -y git
curl -sL h􀆩ps://deb.nodesource.com/setup_18.x | sudo -E bash -
apt-get install -y nodejs
git clone YourRepositoryURLhere
cd YourRepositoryNamehere/
npm install express
node index.js



As12:
cd /etc/nginx/sites-available/

sudo nano default

Next, Press “Ctrl+X  Y Enter” respectively to exit and save your changes.
f) Next, Enter the following command:
sudo systemctl restart nginx

5. Now run the Public IPv4 Address in a web browser without using the port number.


location / {
proxy_pass http://localhost:4000;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection 'Upgrade';
proxy_set_header Host $host;
proxy_cache_bypass $http_upgrade;
}

As10: 
curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash –
sudo apt install nodejs
git clone https://github.com/exd35-avi/myrepo.git
----Now, give the Username and Password(Token)
cd Awsproject2
npm install
node index.js

